version: "2.4"
services:

  dotnetsdk:
    image: ${MVP_DOCKER_REGISTRY}mvp-dotnetsdk:${VERSION:-latest}
    build:
      context: ./docker/build/dotnetsdk
      args:
        BUILD_IMAGE: ${SOLUTION_BUILD_IMAGE}
        NETCORE_BUILD_IMAGE: ${NETCORE_BUILD_IMAGE}
    scale: 0

  solutionBuildOutput:
    image: ${MVP_DOCKER_REGISTRY}mvp-solution-build-output:${SITECORE_VERSION}-nanoserver-${WINDOWS_SERVER_VERSION}
    build:
      context: ./
      dockerfile: ./docker/build/solution/Dockerfile
      args:
        BASE_IMAGE: ${SOLUTION_BASE_IMAGE}
        BUILD_IMAGE: ${SOLUTION_BUILD_IMAGE}
        NETCORE_BUILD_IMAGE: ${NETCORE_BUILD_IMAGE}
        NUGET_PREVIEW_SOURCE: ${NUGET_PREVIEW_SOURCE}
        AZURE_PAT: ${AZURE_PAT}
    scale: 0

  rendering:
    container_name: mvp-rendering
    image: ${MVP_DOCKER_REGISTRY}mvp-rendering:${SITECORE_VERSION}-aspnet-${ASPNET_VERSION}
    build:
      context: ./docker/build/rendering
      args:
        DEBUG_BASE_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-dotnetsdk:${VERSION:-latest}
        RELEASE_BASE_IMAGE: mcr.microsoft.com/dotnet/core/aspnet:3.1
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution-build-output:${VERSION:-latest}
    ports:
      - "8091:80"
    volumes:
      - .\:C:\solution
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://*:80"
      Sitecore__InstanceUri: "http://mvp-cm"
      Sitecore__RenderingHostUri: "https://${RENDERING_HOST}"
      Sitecore__EnableExperienceEditor: "true"
    depends_on:
      - solutionBuildOutput
      - cd
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mvp-rendering-secure.entrypoints=websecure"
      - "traefik.http.routers.mvp-rendering-secure.rule=Host(`${RENDERING_HOST}`)"
      - "traefik.http.routers.mvp-rendering-secure.tls=true"   

  traefik:
    container_name: traefik
    isolation: ${TRAEFIK_ISOLATION}
    image: ${TRAEFIK_IMAGE}
    command:
      - "--api.insecure=true"
      - "--providers.docker.endpoint=npipe:////./pipe/docker_engine"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.directory=C:/etc/traefik/config/dynamic"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
    ports:
      - "8080:80"
      - "443:443"
      - "8079:8080"
    volumes:
      - source: \\.\pipe\docker_engine
        target: \\.\pipe\docker_engine
        type: npipe
      - ./docker/traefik:C:/etc/traefik
    depends_on:
      - id
      - cm

  redis:
    container_name: mvp-redis
    isolation: ${ISOLATION}
    image: ${SITECORE_DOCKER_REGISTRY}${REDIS_IMAGE}:${SITECORE_VERSION}

  mssql:
    container_name: mvp-sql
    isolation: ${ISOLATION}
    image: ${MVP_DOCKER_REGISTRY}mvp-mssql:${VERSION:-latest}
    build:
      context: ./docker/build/mssql
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${SQL_IMAGE}:${SITECORE_VERSION}
        JSS_RESOURCES_IMAGE: ${JSS_RESOURCES_IMAGE}
    volumes:
      - type: bind
        source: .\docker\data\sql
        target: c:\data
    environment:
      SA_PASSWORD: ${SQL_SA_PASSWORD}
      SITECORE_ADMIN_PASSWORD: ${SITECORE_ADMIN_PASSWORD}
      ACCEPT_EULA: "Y"
    ports:
      - "14331:1433"

  solr:
    container_name: mvp-solr
    isolation: ${ISOLATION}
    ports:
      - "8985:8983"
    image: ${SITECORE_DOCKER_REGISTRY}${SOLR_IMAGE}:${SITECORE_VERSION}
    volumes:
      - type: bind
        source: .\docker\data\solr
        target: c:\data

  id:
    container_name: mvp-id
    isolation: ${ISOLATION}
    image: ${MVP_DOCKER_REGISTRY}mvp-id:${SITECORE_VERSION}-framework-${ASPNET_VERSION}
    build:
      context: ./docker/build/id
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${ID_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution-build-output:${SITECORE_VERSION}-nanoserver-${WINDOWS_SERVER_VERSION}
    environment:
      Sitecore_Sitecore__IdentityServer__SitecoreMemberShipOptions__ConnectionString: Data Source=mvp-sql;Initial Catalog=Sitecore.Core;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_Sitecore__IdentityServer__AccountOptions__PasswordRecoveryUrl: https://${CM_HOST}/sitecore/login?rc=1
      Sitecore_Sitecore__IdentityServer__Clients__PasswordClient__ClientSecrets__ClientSecret1: ${SITECORE_IDSECRET}
      Sitecore_Sitecore__IdentityServer__Clients__DefaultClient__AllowedCorsOrigins__AllowedCorsOriginsGroup1: https://${CM_HOST}
      Sitecore_Sitecore__IdentityServer__CertificateRawData: ${SITECORE_ID_CERTIFICATE}
      Sitecore_Sitecore__IdentityServer__PublicOrigin: https://${ID_HOST}
      Sitecore_Sitecore__IdentityServer__CertificateRawDataPassword: ${SITECORE_ID_CERTIFICATE_PASSWORD}
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
    healthcheck:
      test: ["CMD", "powershell", "-command", "C:/Healthchecks/Healthcheck.ps1"]
      timeout: 300s
    depends_on:
      mssql:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mvp-id-secure.entrypoints=websecure"
      - "traefik.http.routers.mvp-id-secure.rule=Host(`${ID_HOST}`)"
      - "traefik.http.routers.mvp-id-secure.tls=true"
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license

  cd:
    container_name: mvp-cd
    isolation: ${ISOLATION}
    image: ${MVP_DOCKER_REGISTRY}mvp-cd:${SITECORE_VERSION}-framework-${ASPNET_VERSION}
    build:
      context: ./docker/build/cd
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${CD_IMAGE}:${SITECORE_VERSION}
        TOOLS_RESOURCES_IMAGE: ${TOOLS_RESOURCES_IMAGE}
        JSS_RESOURCES_IMAGE: ${JSS_RESOURCES_IMAGE}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution-build-output:${SITECORE_VERSION}-nanoserver-${WINDOWS_SERVER_VERSION}
    depends_on:
      mssql:
        condition: service_healthy
      solr:
        condition: service_started
      id:
        condition: service_started
      redis:
        condition: service_started
      solutionBuildOutput:
        condition: service_started
    environment:
      Sitecore_AppSettings_instanceNameMode:define: default
      Sitecore_ConnectionStrings_Security: Data Source=mvp-sql;Initial Catalog=Sitecore.Core;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Web: Data Source=mvp-sql;Initial Catalog=Sitecore.Web;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_ExperienceForms: Data Source=mvp-sql;Initial Catalog=Sitecore.ExperienceForms;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Solr.Search: http://mvp-solr:8983/solr
      Sitecore_ConnectionStrings_Redis.Sessions: mvp-redis:6379,ssl=False,abortConnect=False
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
    healthcheck:
      test: ["CMD", "powershell", "-command", "C:/Healthchecks/Healthcheck.ps1"]
      timeout: 300s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mvp-cd.entrypoints=websecure"
      - "traefik.http.routers.mvp-cd.rule=Host(`${CD_HOST}`)"
      - "traefik.http.routers.mvp-cd.tls=true"
    volumes:
      - ${LOCAL_DEPLOY_PATH}:C:\src
      - ${HOST_LICENSE_FOLDER}:c:\license
    entrypoint: powershell.exe -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1"

  cm:
    container_name: mvp-cm
    isolation: ${ISOLATION}
    image: ${MVP_DOCKER_REGISTRY}mvp-cm:${SITECORE_VERSION}-framework-${ASPNET_VERSION}
    build:
      context: ./docker/build/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${CM_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution-build-output:${SITECORE_VERSION}-nanoserver-${WINDOWS_SERVER_VERSION}
        TOOLS_RESOURCES_IMAGE: ${TOOLS_RESOURCES_IMAGE}
        DEVEX_RESOURCES_IMAGE: ${DEVEX_RESOURCES_IMAGE}
        JSS_RESOURCES_IMAGE: ${JSS_RESOURCES_IMAGE}
    depends_on:
      mssql:
        condition: service_healthy
      solr:
        condition: service_started
      id:
        condition: service_started
      solutionBuildOutput:
        condition: service_started
    environment:
      Sitecore_AppSettings_instanceNameMode:define: default
      Sitecore_ConnectionStrings_Core: Data Source=mvp-sql;Initial Catalog=Sitecore.Core;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Security: Data Source=mvp-sql;Initial Catalog=Sitecore.Core;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Master: Data Source=mvp-sql;Initial Catalog=Sitecore.Master;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Web: Data Source=mvp-sql;Initial Catalog=Sitecore.Web;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_ExperienceForms: Data Source=mvp-sql;Initial Catalog=Sitecore.ExperienceForms;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Solr.Search: http://mvp-solr:8983/solr
      Sitecore_ConnectionStrings_SitecoreIdentity.secret: ${SITECORE_IDSECRET}
      Sitecore_AppSettings_Telerik.AsyncUpload.ConfigurationEncryptionKey: ${TELERIK_ENCRYPTION_KEY}
      Sitecore_AppSettings_Telerik.Upload.ConfigurationHashKey: ${TELERIK_ENCRYPTION_KEY}
      Sitecore_AppSettings_Telerik.Web.UI.DialogParametersEncryptionKey: ${TELERIK_ENCRYPTION_KEY}
      Sitecore_Identity_Server_Authority: https://${ID_HOST}
      Sitecore_Identity_Server_InternalAuthority: http://mvp-id
      Sitecore_Identity_Server_CallbackAuthority: https://${CM_HOST}
      Sitecore_Identity_Server_Require_Https: "false"
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
    healthcheck:
      test: ["CMD", "powershell", "-command", "C:/Healthchecks/Healthcheck.ps1"]
      timeout: 300s
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.force-STS-Header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.force-STS-Header.headers.stsSeconds=31536000"
      - "traefik.http.routers.mvp-cm-secure.entrypoints=websecure"
      - "traefik.http.routers.mvp-cm-secure.rule=Host(`${CM_HOST}`)"
      - "traefik.http.routers.mvp-cm-secure.tls=true"
      - "traefik.http.routers.mvp-cm-secure.middlewares=force-STS-Header"
    volumes:
      - ${LOCAL_DEPLOY_PATH}\sitecore:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    entrypoint: powershell.exe -Command "& C:\tools\entrypoints\iis\Development.ps1"

networks:
  default:
    external:
      name: nat