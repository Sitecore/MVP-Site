version: "2.4"
services:

  dotnetsdk:
    container_name: mvp-dotnetsdk
    image: ${MVP_DOCKER_REGISTRY}mvp-dotnetsdk:${SITECORE_VERSION}
    build:
      context: ./docker/build/dotnetsdk
      args:
        BUILD_IMAGE: ${SOLUTION_BUILD_IMAGE}
        NETCORE_BUILD_IMAGE: ${NETCORE_BUILD_IMAGE}
    scale: 0

  solutionBuildOutput:
    container_name: mvp-solution
    image: ${MVP_DOCKER_REGISTRY}mvp-solution:${SITECORE_VERSION}
    build:
      context: ./
      dockerfile: ./docker/build/solution/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
        BASE_IMAGE: ${SOLUTION_BASE_IMAGE}
        BUILD_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-dotnetsdk:${SITECORE_VERSION}
    depends_on:
      - dotnetsdk
    scale: 0

  mvp-rendering:
    container_name: mvp-rendering
    image: ${MVP_DOCKER_REGISTRY}mvp-rendering:${SITECORE_VERSION}
    build:
      context: ./docker/build/rendering
      target: ${BUILD_CONFIGURATION}
      args:
        DEBUG_BASE_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-dotnetsdk:${SITECORE_VERSION}
        RELEASE_BASE_IMAGE: mcr.microsoft.com/dotnet/core/aspnet:3.1
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution:${SITECORE_VERSION}
    ports:
      - "8091:80"
    volumes:
      - .\:C:\solution
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://*:80"
      Sitecore__InstanceUri: "http://cd"
      Sitecore__RenderingHostUri: "https://${RENDERING_HOST}"
      Sitecore__EnableExperienceEditor: "true"
      Okta__OktaDomain: ${OKTA_DOMAIN}
      Okta__ClientId: ${OKTA_CLIENT_ID}
      Okta__ClientSecret: ${OKTA_CLIENT_SECRET}
      Okta__AuthorizationServerId: ${OKTA_AUTH_SERVER_ID}
      PeopleGraphQL__UrlLive: ${PeopleGraphQL_UrlLive}
      PeopleGraphQL__UrlEdit: ${PeopleGraphQL_UrlEdit}
    depends_on:
      - solutionBuildOutput
      - cm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rendering-secure.entrypoints=websecure"
      - "traefik.http.routers.rendering-secure.rule=Host(`${RENDERING_HOST}`)"
      - "traefik.http.routers.rendering-secure.tls=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 60s
      timeout: 30s

  traefik:
    volumes:
      - ./docker/traefik:C:/etc/traefik
    depends_on:
      mvp-rendering:
        condition: service_started

  mssql:
    volumes:
      - type: bind
        source: .\docker\data\sql
        target: c:\data
  
  mssql-init:
    isolation: ${ISOLATION}
    image: ${MVP_DOCKER_REGISTRY}mvp-mssql-init:${SITECORE_VERSION}
    build:
      context: ./docker/build/mssql-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-mssql-init:${SITECORE_VERSION}
        HEADLESS_SERVICES_RESOURCES_IMAGE: ${HEADLESS_SERVICES_RESOURCES_IMAGE}
        SPE_RESOURCES_IMAGE: ${SPE_RESOURCES_IMAGE}
    environment:
      SQL_SERVER: mssql
      SQL_ADMIN_LOGIN: sa
      SQL_ADMIN_PASSWORD: ${SQL_SA_PASSWORD}
      sitecore_admin_password: ${SITECORE_ADMIN_PASSWORD}
    depends_on:
      mssql:
        condition: service_healthy

  solr:
    volumes:            
      - ${LOCAL_DATA_PATH}\solr:c:\data  
   
  solr-init:
    image: ${MVP_DOCKER_REGISTRY}mvp-solr-init:${SITECORE_VERSION}
    build:
      context: ./docker/build/solr-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xm1-solr-init:${SITECORE_VERSION}                
  
  id:
    image: ${MVP_DOCKER_REGISTRY}mvp-id:${SITECORE_VERSION}
    build:
      context: ./docker/build/id
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${ID_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution:${SITECORE_VERSION}
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    depends_on:
      - solutionBuildOutput

  cd:
    image: ${MVP_DOCKER_REGISTRY}mvp-cd:${SITECORE_VERSION}
    build:
      context: ./docker/build/cd
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${CD_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution:${SITECORE_VERSION}
        TOOLS_RESOURCES_IMAGE: ${TOOLS_RESOURCES_IMAGE}
        HEADLESS_SERVICES_RESOURCES_IMAGE: ${HEADLESS_SERVICES_RESOURCES_IMAGE}
    depends_on:
      solutionBuildOutput:
        condition: service_started
      mssql-init:
        condition: service_completed_successfully
    volumes:
      - ${LOCAL_DEPLOY_PATH}\sitecore:C:\deploy
      - ${LOCAL_DATA_PATH}\cd:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      SITECORE_DEVELOPMENT_PATCHES: CustomErrorsOff
      Okta__OktaDomain: ${OKTA_DOMAIN}
      Okta__ClientId: ${OKTA_CLIENT_ID}
      Okta__ClientSecret: ${OKTA_CLIENT_SECRET}
      Okta__AuthorizationServerId: ${OKTA_AUTH_SERVER_ID}
      Okta__RedirectUri: "https://${CD_HOST}/identity/externallogincallback"
    entrypoint: powershell.exe -Command "& C:\tools\entrypoints\iis\Development.ps1"
    labels:
      - "traefik.http.middlewares.force-STS-Header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.force-STS-Header.headers.stsSeconds=31536000"
      - "traefik.http.routers.cd-secure.entrypoints=websecure"
      - "traefik.http.routers.cd-secure.rule=Host(`${CD_HOST}`)"
      - "traefik.http.routers.cd-secure.tls=true"
      - "traefik.http.routers.cd-secure.middlewares=force-STS-Header"

  cm:
    image: ${MVP_DOCKER_REGISTRY}mvp-cm:${SITECORE_VERSION}
    build:
      context: ./docker/build/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${CM_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution:${SITECORE_VERSION}
        TOOLS_RESOURCES_IMAGE: ${TOOLS_RESOURCES_IMAGE}
        DEVEX_RESOURCES_IMAGE: ${DEVEX_RESOURCES_IMAGE}
        HEADLESS_SERVICES_RESOURCES_IMAGE: ${HEADLESS_SERVICES_RESOURCES_IMAGE}
        SPE_RESOURCES_IMAGE: ${SPE_RESOURCES_IMAGE}
    depends_on:
      solutionBuildOutput:
        condition: service_started
      mssql-init:
        condition: service_completed_successfully    
    volumes:
      - ${LOCAL_DEPLOY_PATH}\sitecore:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      SITECORE_DEVELOPMENT_PATCHES: CustomErrorsOff
      Okta__OktaDomain: ${OKTA_DOMAIN}
      Okta__ClientId: ${OKTA_CLIENT_ID}
      Okta__ClientSecret: ${OKTA_CLIENT_SECRET}
      Okta__AuthorizationServerId: ${OKTA_AUTH_SERVER_ID}
      Okta__RedirectUri: "https://${CM_HOST}/identity/externallogincallback"
    entrypoint: powershell.exe -Command "& C:\tools\entrypoints\iis\Development.ps1"
 
networks:
  default:
    external:
      name: nat