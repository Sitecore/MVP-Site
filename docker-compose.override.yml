version: "2.4"

services:

  dotnetsdk:
    container_name: mvp-dotnetsdk
    image: ${MVP_DOCKER_REGISTRY}mvp-dotnetsdk:${VERSION:-latest}
    build:
      context: ./docker/build/dotnetsdk
      args:
        BUILD_IMAGE: ${SOLUTION_BUILD_IMAGE}
        NETCORE_BUILD_IMAGE: ${NETCORE_BUILD_IMAGE}
    scale: 0

  solutionBuildOutput:
    container_name: mvp-solution
    image: ${MVP_DOCKER_REGISTRY}mvp-solution:${VERSION:-latest}
    build:
      context: ./
      dockerfile: ./docker/build/solution/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION}
        BASE_IMAGE: ${SOLUTION_BASE_IMAGE}
        BUILD_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-dotnetsdk:${VERSION:-latest}
        NUGET_PREVIEW_SOURCE: ${NUGET_PREVIEW_SOURCE}
        AZURE_PAT: ${AZURE_PAT}        
    depends_on:
      - dotnetsdk
    scale: 0

  rendering:
    container_name: mvp-rendering
    image: ${MVP_DOCKER_REGISTRY}mvp-rendering:${VERSION:-latest}
    build:
      context: ./docker/build/rendering
      target: ${BUILD_CONFIGURATION}
      args:
        DEBUG_BASE_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-dotnetsdk:${VERSION:-latest}
        RELEASE_BASE_IMAGE: mcr.microsoft.com/dotnet/core/aspnet:3.1
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution:${VERSION:-latest}
        NUGET_PREVIEW_SOURCE: ${NUGET_PREVIEW_SOURCE}
        AZURE_PAT: ${AZURE_PAT}        
    ports:
      - "8091:80"
    volumes:
      - .\:C:\solution
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://*:80"
      Sitecore__InstanceUri: "http://mvp-cm"
      Sitecore__RenderingHostUri: "https://${RENDERING_HOST}"
      Sitecore__EnableExperienceEditor: "true"
    depends_on:
      - solutionBuildOutput
      - cm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rendering-secure.entrypoints=websecure"
      - "traefik.http.routers.rendering-secure.rule=Host(`${RENDERING_HOST}`)"
      - "traefik.http.routers.rendering-secure.tls=true"

  traefik:
    volumes:
      - ./docker/traefik:C:/etc/traefik
    depends_on:
      - rendering

  redis:
    container_name: mvp-redis
    isolation: ${ISOLATION}
    image: ${SITECORE_DOCKER_REGISTRY}${REDIS_IMAGE}:${SITECORE_VERSION}

  mssql:
    container_name: mvp-mssql
    image: ${MVP_DOCKER_REGISTRY}mvp-mssql:${VERSION:-latest}
    build:
      context: ./docker/build/mssql
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${SQL_IMAGE}:${SITECORE_VERSION}
        JSS_RESOURCES_IMAGE: ${JSS_RESOURCES_IMAGE}
    volumes:
      - type: bind
        source: .\docker\data\sql
        target: c:\data
  
  solr:
    container_name: mvp-solr
    image: ${MVP_DOCKER_REGISTRY}mvp-solr:${VERSION:-latest}
    build:
      context: ./docker/build/solr
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${SOLR_IMAGE}:${SITECORE_VERSION}
    volumes:
      - type: bind
        source: .\docker\data\solr
        target: c:\data

  id:
    container_name: mvp-id
    image: ${MVP_DOCKER_REGISTRY}mvp-id:${VERSION:-latest}
    build:
      context: ./docker/build/id
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${ID_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution:${VERSION:-latest}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml

  cm:
    container_name: mvp-cm
    image: ${MVP_DOCKER_REGISTRY}mvp-cm:${VERSION:-latest}
    build:
      context: ./docker/build/cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${CM_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution:${VERSION:-latest}
        TOOLS_RESOURCES_IMAGE: ${TOOLS_RESOURCES_IMAGE}
        DEVEX_RESOURCES_IMAGE: ${DEVEX_RESOURCES_IMAGE}
        JSS_RESOURCES_IMAGE: ${JSS_RESOURCES_IMAGE}
    depends_on:
      solutionBuildOutput:
        condition: service_started
    volumes:
      - ${LOCAL_DEPLOY_PATH}\sitecore:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
    entrypoint: powershell.exe -Command "& C:\tools\entrypoints\iis\Development.ps1"

  cd:
    container_name: mvp-cd
    image: ${MVP_DOCKER_REGISTRY}mvp-cd:${VERSION:-latest}
    build:
      context: ./docker/build/cd
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}${CD_IMAGE}:${SITECORE_VERSION}
        SOLUTION_IMAGE: ${MVP_DOCKER_REGISTRY}mvp-solution:${VERSION:-latest}
        TOOLS_RESOURCES_IMAGE: ${TOOLS_RESOURCES_IMAGE}
        JSS_RESOURCES_IMAGE: ${JSS_RESOURCES_IMAGE}
    depends_on:
      solutionBuildOutput:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ${LOCAL_DEPLOY_PATH}\sitecore:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      Sitecore_ConnectionStrings_Redis.Sessions: mvp-redis:6379,ssl=False,abortConnect=False
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
    entrypoint: powershell.exe -Command "& C:\tools\entrypoints\iis\Development.ps1"
  
networks:
  default:
    external:
      name: nat